<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Reflection"#>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>  
<#@ assembly name="System.xml" #>  
<#@ import namespace="System.Collections.Generic" #>  
<#@ import namespace="System.Data.SqlClient" #>  
<#@ import namespace="System.Data" #> 
using ntu.xzmcwjzs.DAL.Repositories;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace ntu.xzmcwjzs.DALSessionFactory
{
 public partial  class AbstractFactory
    {
 <#
            
            //string currentPath =Path.GetDirectoryName(this.Host.TemplateFile);
            //string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\ntu.xzmcwjzs.DAL"));
            //string txtFilePath= Path.Combine(solutionPath, @"ntu.xzmcwjzs.Model\ClassNameTxt\ClassName.txt");  
            //string[] ClassNameList =new string[]{""};
            //using(StreamReader reader=new StreamReader(txtFilePath)){
            //string classNameStr=reader.ReadToEnd();
           //int index=classNameStr.LastIndexOf(',');
	       //classNameStr=classNameStr.Substring(0,index);
          //ClassNameList= classNameStr.Split(',');
          //}
    List<string> ClassNameList =new List<string>();
    string connectionString ="server=.;database=XZMCWJZS;integrated security=true";
    SqlConnection conn = new SqlConnection(connectionString);  
    conn.Open();  
    System.Data.DataTable schema = conn.GetSchema("TABLES");  
    string selectQuery = "select * from @tableName";  
    SqlCommand command = new SqlCommand(selectQuery,conn);  
    SqlDataAdapter ad = new SqlDataAdapter(command);  
    System.Data.DataSet ds = new DataSet();  
    foreach(System.Data.DataRow row in schema.Rows)  {
    if(row["TABLE_NAME"].ToString()!="__MigrationHistory"){
            ClassNameList.Add(row["TABLE_NAME"].ToString());
    }
    
}
        #>
<#
    if(ClassNameList.Count>0){
        foreach (var className in ClassNameList)
		{#>
	    public static <#=className#>Repository Get<#=className#>Repository()
		    {
		        return Assembly.Load(AssemblyPath).CreateInstance(NameSpacePath + ".Repositories.<#=className#>Repository") as 

<#=className#>Repository;
		    }
	  <#}
    }#> 
   }
}